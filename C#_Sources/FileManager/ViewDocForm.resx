<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3J0WAOOiFgDlpBgA6KcaAOmoGwD0rBAA9a0QAPWwHADVnCAAz54zANWgLQDhpSEA9bQnAOCp
        MwC9l0YAtpRJALmbWgCumGcAqZhyALqldwCyoX0AxqFOAN+tQADas14A7rhFAMWnZQDHr3sA9cJRAPfI
        YwDyzX0Aq5+DAKuhjAC2qIkAvrKXALKtpAC6sqAAu7ixAL+8tQDTwp4A+taIAOXNmgD42pkA+tybANrO
        tQDp17AA+uGtAPXkvgDKysgA0dDOANzc3ADr3sEA5NzMAP3x2QDk5OQA6urqAPHu5gD08OYA/vntAPHx
        8QDy8vIA+Pj4AP///wDQlBAAAAAAAHQTjACFqzZ3bBOMAAEAAADkERZ1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6AICM
        iAYAAAAAjBOMAAgA0QDaAQAAKBIWdRgqEnUgAAsAoIGIBgEAAAB4jIgGsBOMACPgNXel3zV3AAAAAAAA
        AAAAAAAANBSMAJPGE3U0FIwA7cYTdQAAAAACAAAA/BWMAAEAAAAYAAAAAAAAAAwUjABCAAAAAAAAAPgT
        jAAAAAAAAAAAAAAAAAAAAAAADAAAAAIAAAABAQAAcBSMAAAAAAAAALoAiHORBgAAAAACAAAACgDoANAF
        AACAjIgGAAAAAFQIAADwa5EGAQAAAIBzkQZUFIwAI+A1d1QIAACIFIwAAQAAAIBzkQZoFIwAqOY1dwAA
        ugAAAAAAiHORBngUjAB/5jV3iHORBgIAAACQFIwA0FMUdogUjAD8FYwAAAAAAAAAAADQFYwAr9RKAOAx
        rAAAAADAAAAAAMQVjAACAAAAgAAAAAAAAABAAAAAMAAAADAAAABXOlxNUFxFU1A4MjY2XEMjXEltYWdl
        XGRvd25sb2FkLmljbwAQl4MGAQAAAOCXgwYIFYwAI+A1d0bhNXdkFYwABxJudeCXgwYcFYwAqOY1dwAA
        ugAAAAAA6JeDBiwVjAB/5jV3AAAAAKAVjADZExUuPfk0d8/eEnVUCAAAAAAAAAAAAAAAAAAAdBWMAAwW
        jAAWAAAAAAAAABXfEnUA3L62FgAAAPwVjAAwAAAAAAAAAAAAAAAAAAAAFgAAAFwVjAAAAAAAJBaMAABw
        FXXcQSfD/v///xXfEnXMEhR2VAgAAAwWjAAWAAAA4BWMAAAAAADUFYwARtVKAFQIAAAMFowAFgAAAOAV
        jAAAAAAAPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+PTw3NjIyMjI2Nz09Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PTcy
        MCMTEhAQEBASHyMwMjs9Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj02MB8PBQYGBwcGBwYFBQQM
        ECAwNz0+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+NzASAwYGBwcGBwcGBgQEBQUFBQULEzA3Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj0yFQwGBgYGBgYGBgYGBAQEBAQEBQUFBQsfMj0+Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+OyYPBgcGBwcGBwcGBgYEBAQEBAQEBQUFBQUFEDA8Pj4+Pj4+Pj4+Pj4+Pj4+Pj47IwwHBgcGBwcG
        BwcGBQMDBAQEBAQEBAUFBQUFBQolPD4+Pj4+Pj4+Pj4+Pj4+PjskBQYGBgYGBgYGBgYEAwMDAwMEBAQE
        BAQEBAUFBQULJTw+Pj4+Pj4+Pj4+Pj4+PSMFBwcHBgcGBwcGBgMDAwMDAwMDBAQEBAQEBAUFBQUFCyY9
        Pj4+Pj4+Pj4+Pj49MAwGBwcHBgcGBwcGAwMDAwMDAwMDBAQEBAQEBAUFBQUFBQoxPj4+Pj4+Pj4+Pj42
        CgcGBwcHBgcGBgYCAgIDAwMDAwMDAwMDBAQEBAQFBAUFBQUQNz4+Pj4+Pj4+Pj0VBgYGBgYGBgYGAgEB
        AQEBAQEBAQEBAQEBAQEMAwQEBAQFBQUFID0+Pj4+Pj4+PjEFBwcGBwcHBgYZKSkpKSkpKSkpKSkpKSkp
        KSkpDgMEBAUFBQUFCzI+Pj4+Pj4+PRIGBgYGBgYGBgYdPDs7Ozs7Ozs7Ozs7Ozs7Ozs8FwMEBAQEBAUF
        BRU9Pj4+Pj4+MgUGBwcGBwcHBgcdOTk5OTk5OTk5OTk5OTk5OTk5FwMEBAQEBAUFBQs2Pj4+Pj4+IQcG
        BwcGBwcHBgcGBwcGBwcGBwcGBwYEAwMDAwMDAwMEBAQEBAQFBQUkPj4+Pj49CgYGBgYGBgYGBgYGBgYG
        BgYGBgYGBgQCAwMDAwMDAwMDBAQEBAQEBAQRPT4+Pj42CAcGBwcGBwcHBgcGBwcGBwcGBwYIDAECAwMD
        AwMDAwMDAwQEBAQEBAUMOz4+Pj4mBwcGBwcGBwcHBgcGBwcGBwcGBwgvMwkBAgMDAwMDAwMDAwQEBAQE
        BAQFMD4+Pj4VBgYGBgYGBgYGBgYGBgYGBgYGCC88PDMJAQICAwMDAwMDAwMDAwQEBAQGIj4+Pj4RBwcG
        BwcGBwcHBgcGBwcGBwcILzw7PDwzCQECAwMDAwMDAwMDAwQEBAYHFD4+Pj4WBwcGBwcGBwcHBgcGBwcG
        BwgvPDw7PDw8MwkBAgMDAwMDAwMDAwQEBgcHGj4+Pj4WBgYGBgYGBgYGBgYGBgYGCC88Ozs7Ozs7PDMJ
        AQICAwMDAwMDAwQGBgYGET4+Pj4WBwcGBwcGBwcHBgcGBwcILzw7PDw7PDw7PDwzCQECAgMDAwMDBAYH
        BgcHET4+Pj4WBwcGBwcGBwcHBgcGBwgvPDw7PDw7PDw7PDw8MwkBAgMDAwMDBgcHBgcHGj4+Pj4aBgYG
        BgYGBgYGBgYGCC88Ozs7Ozs7Ozs7Ozs7PDMJAQICAwMGBgYGBgYGGz4+Pj4bBwcGBwcGBwcHBgcILzw8
        PDw8PDw7PDw7PDw8PDwzDAICAwYHBgcHBgcHJz4+Pj4sBwcGBwcGBwcHBgcHCAgICAg5PDw7PDw7OD8/
        PwkBAQIDBgcHBgcHBgcHND4+Pj44CAYGBgYGBgYGBgYGBgYGBgY5Ozs7Ozs7OD8BAQECAgMGBgYGBgYG
        BgYFPT4+Pj4+FwcGBwcGBwcHBgcGBwcGBwc5PDw7PDw7OD8BAgICAwYHBgcHBgcHBgcYPj4+Pj4+KQcG
        BwcGBwcHBgcGBwcGBwc5PDw7PDw7OD8BAgIDBgcHBgcHBgcHBgctPj4+Pj4+OggGBwcGBwcHBgcGBwcG
        Bwc5PDw7PDw7OD8BAQMGBgcHBgcHBgcHBg09Pj4+Pj4+Ph4GBgYGBgYGBgYGBgYGBgY5Ozs7Ozs7OD8B
        AwYGBgYGBgYGBgYGBio+Pj4+Pj4+PjoNBwcGBwcHBgcGBwcGBwc5PDw7PDw7OD8CBgcHBgcHBgcHBgcH
        DTo+Pj4+Pj4+Pj4qBwcGBwcHBgcGBwcGBwc5PDw8PDw8OAEGBwcHBgcHBgcHBgcHLj4+Pj4+Pj4+Pj4+
        HAYGBgYGBgYGBgYGBgYNDQ0NDQ0NDQYGBgYGBgYGBgYGBgYdPj4+Pj4+Pj4+Pj4+Og0GBwcHBgcGBwcG
        BwcGBwcGBgcGBwcGBwcHBgcHBgcHBhk6Pj4+Pj4+Pj4+Pj4+PjUNBwcHBgcGBwcGBwcGBwcGBwcGBwcG
        BwcHBgcHBgcHDTU+Pj4+Pj4+Pj4+Pj4+Pj4vDQYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYNNT4+
        Pj4+Pj4+Pj4+Pj4+Pj4+NQ0HBgcGBwcGBwcGBwcGBwcGBwcGBwcHBgcHBhk1Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+PjodBwcGBwcGBwcGBwcGBwcGBwcGBwcHBgcHHTo+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Lg0GBgYG
        BgYGBgYGBgYGBgYGBgYGBg0uPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PjoqDQcGBwcGBwcGBwcGBwcG
        BwcNKzo+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Oi4dDQcGBwcGBwcGBwcNHS89Pj4+Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PTUuKB4dHR4oLjU9Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>